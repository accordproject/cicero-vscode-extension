{
	"name": "cicero-vscode-extension",
	"displayName": "Accord Project",
	"description": "Accord Project extension for Visual Studio Code, providing tools for template development.",
	"author": "Clause",
	"license": "Apache-2.0",
	"version": "0.21.1",
	"publisher": "accordproject",
	"icon": "icon.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/accordproject/cicero-vscode-extension"
	},
	"engines": {
		"vscode": "^1.46.0"
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"package:vsix": "node ./node_modules/vsce/out/vsce package",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"@types/vscode": "^1.46.0",
		"@typescript-eslint/eslint-plugin": "^2.30.0",
		"@typescript-eslint/parser": "^2.30.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.2",
		"typescript": "^3.8.3",
		"vsce": "^1.77.0",
		"vscode-test": "^1.3.0"
	},
	"dependencies": {
		"@accordproject/cicero-core": "^0.21.0",
		"@accordproject/concerto-core": "^0.82.8",
		"vscode-languageclient": "^4.4.2"
	},
	"activationEvents": [
		"onLanguage:ergo",
		"onLanguage:concerto",
		"onLanguage:ciceroMark",
		"onLanguage:markdown",
		"onCommand:cicero-vscode-extension.exportArchive",
		"onCommand:cicero-vscode-extension.downloadModels"
	],
	"main": "./out/extension.js",
	"categories": [
		"Programming Languages",
		"Snippets"
	],
	"contributes": {
		"languages": [
			{
				"id": "ergo",
				"aliases": [
					"Ergo",
					"ergo"
				],
				"extensions": [
					".ergo"
				],
				"configuration": "./ergo.language-configuration.json"
			},
			{
				"id": "ciceroMark",
				"aliases": [
					"CiceroMark"
				],
				"extensions": [
					".tem.md"
				],
				"configuration": "./ciceroMark.language-configuration.json"
			},
			{
				"id": "concerto",
				"aliases": [
					"Concerto model",
					"concerto"
				],
				"extensions": [
					".cto"
				],
				"configuration": "./concerto.language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "ergo",
				"scopeName": "source.ergo",
				"path": "./syntaxes/ergo.tmLanguage.json"
			},
			{
				"language": "ciceroMark",
				"scopeName": "source.ciceroMark",
				"path": "./syntaxes/ciceroMark.tmLanguage.json"
			},
			{
				"language": "concerto",
				"scopeName": "source.concerto",
				"path": "./syntaxes/concerto.tmLanguage.json"
			}
		],
		"snippets": [
			{
				"language": "concerto",
				"path": "./snippets/concerto.json"
			},
			{
				"language": "ergo",
				"path": "./snippets/ergo.json"
			}
		],
		"commands": [
			{
				"command": "cicero-vscode-extension.exportArchive",
				"title": "Export Cicero Archive",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.downloadModels",
				"title": "Download External Models",
				"category": "Accord Project"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"when": "explorerResourceIsFolder",
					"command": "cicero-vscode-extension.exportArchive",
					"group": "AccordProject@1"
				},
				{
					"when": "explorerResourceIsFolder",
					"command": "cicero-vscode-extension.downloadModels",
					"group": "AccordProject@2"
				}
			],
			"commandPalette": [
				{
					"command": "cicero-vscode-extension.exportArchive",
					"when": "false"
				},
				{
					"command": "cicero-vscode-extension.downloadModels",
					"when": "false"
				}
			]
		}
	},
	"license-check-and-add-config": {
		"folder": ".",
		"license": "HEADER",
		"exact_paths_method": "EXCLUDE",
		"exact_paths": [
			"node_modules",
			"out",
			"server",
			".vscode-test",
			"coverage",
			"LICENSE",
			"HEADER",
			"README.md"
		],
		"file_type_method": "EXCLUDE",
		"file_types": [
			".txt",
			".vsix",
			".DS_Store",
			".vscodeignore"
		],
		"insert_license": false,
		"license_formats": {
			"ts|cto|js|ergo": {
				"prepend": "/*",
				"append": " */",
				"eachLine": {
					"prepend": " * "
				}
			},
			"vscodeignore": {
				"eachLine": {
					"prepend": "# "
				}
			}
		}
	}
}
